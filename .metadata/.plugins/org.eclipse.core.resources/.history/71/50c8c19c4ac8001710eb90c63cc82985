package ver1.ui;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;

import ver1.util.Pair;

public class GraphOntology {
	private static final Color COL_FONT = Color.BLACK;
	private static final Color COL_LINE = Color.BLACK;
	private static final Color COL_HL = Color.YELLOW;
	private static final String SEP = ", ";
	private static final Font FONT = new Font(Font.MONOSPACED, Font.PLAIN, 18);
	
	private GraphAxiom[] axioms;
	private Color colFont, colLine, colHL;
	private Font font;
	
	public GraphOntology(String[] axioms) {
		this.axioms = new GraphAxiom[axioms.length];
		int i = 0;
		for (String s : axioms) 
			this.axioms[i++] = new GraphAxiom(s);
		
		this.colFont = COL_FONT;
		this.colLine = COL_LINE;
		this.colHL = COL_HL;
		
		this.font = FONT;
	}
	
	public Pair<Integer, Integer> paint(Graphics g) {
		Graphics2D g2d = (Graphics2D)g;
		g2d.setFont(font);
		FontMetrics fm = g2d.getFontMetrics();
		
		// length -> How long is the drawed ontology, maxWidth -> Longest axiom
		int length = 0, maxWidth = 0;
		
		// Get axioms text and highlighting, if any
		String text = "";
		int offsetHL = -1, width = -1; // offset respect the String beginning and the width of highlighted axiom, if any
		for (int i = 0; i < axioms.length; i++) {
			// DEBUG
			//if (i == 0) {
			// DEBUG
			if (axioms[i].isHighligthed()) {
				width = fm.stringWidth(axioms[i].getText());
				offsetHL = fm.stringWidth(text);
			}

			maxWidth = Math.max(maxWidth, fm.stringWidth(axioms[i].getText()));
			
			text += axioms[i].getText() + (i+1 < axioms.length ? SEP : "");;
		}
		
		// Write K
		g2d.setFont(new Font(Font.MONOSPACED, Font.PLAIN, 18));
		g2d.setPaint(Color.BLACK);
		FontMetrics fm = g2d.getFontMetrics();
		// TODO change to GraphAxiom, so the position of each axiom in the ontology is known and can be highlighted
		// TODO max_width equal to longest axiom + ", "
		g2d.drawString(tableau.getOntology(), 10, 5+fm.getHeight());
		// Bottom line
		int lineLength = 10+fm.stringWidth(tableau.getOntology())+10;
		g2d.drawLine(0, 5+fm.getHeight()+10, lineLength, 5+fm.getHeight()+10);
		// If ontology longer than panel, adjust canvas size
		CANVAS_WIDTH = Math.max(CANVAS_WIDTH, lineLength+10);
		// Side line
		g2d.drawLine(lineLength, 5+fm.getHeight()+10, lineLength, 0);
	}
}
